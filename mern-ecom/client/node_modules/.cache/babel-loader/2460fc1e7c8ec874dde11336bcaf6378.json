{"ast":null,"code":"import * as userTypes from \"./userType\";\nconst INITIAL_STATE = {\n  products: [],\n  cartOpen: false,\n  cart: [],\n  categories: [],\n  currentCategory: ''\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n    // Your comment here\n    case userTypes.UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.payload.products]\n      };\n\n    case userTypes.ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.payload]\n      };\n\n    case userTypes.ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.payload.products]\n      };\n    // TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n    // Your comment here\n\n    case userTypes.UPDATE_CART_QUANTITY:\n      const {\n        _id,\n        purchaseQuantity\n      } = action.payload;\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (_id === product._id) {\n            product.purchaseQuantity = purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n    // TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n    // Your comment here\n\n    case userTypes.REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action.payload._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case userTypes.CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case userTypes.TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case userTypes.UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.payload.categories]\n      };\n\n    case userTypes.UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.payload.currentCategory\n      };\n    // TODO: Add a comment describing what the default case is for\n    // Your comment here\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"names":["userTypes","INITIAL_STATE","products","cartOpen","cart","categories","currentCategory","userReducer","state","action","type","UPDATE_PRODUCTS","payload","ADD_TO_CART","ADD_MULTIPLE_TO_CART","UPDATE_CART_QUANTITY","_id","purchaseQuantity","map","product","REMOVE_FROM_CART","newState","filter","length","CLEAR_CART","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY"],"sources":["C:/Users/UDAY GAUTAM/Desktop/REDUX STORE/mern-ecom/client/src/redux/user/userReducer.js"],"sourcesContent":["import * as userTypes from \"./userType\";\n\nconst INITIAL_STATE = {\n    products: [],\n    cartOpen: false,\n    cart: [],\n    categories: [],\n    currentCategory: '',\n};\n\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        // TODO: Add a comment describing the functionality of the UPDATE_PRODUCTS case\n        // Your comment here\n        case userTypes.UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.payload.products],\n            };\n\n        case userTypes.ADD_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: [...state.cart, action.payload],\n            };\n\n        case userTypes.ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.payload.products],\n            };\n\n        // TODO: Add a comment describing the functionality of the UPDATE_CART_QUANTITY case\n        // Your comment here\n        case userTypes.UPDATE_CART_QUANTITY:\n            const { _id, purchaseQuantity } = action.payload;\n\n            return {\n                ...state,\n                cartOpen: true,\n                cart: state.cart.map((product) => {\n                    if (_id === product._id) {\n                        product.purchaseQuantity = purchaseQuantity;\n                    }\n                    return product;\n                }),\n            };\n\n        // TODO: Add a comment describing the functionality of the REMOVE_FROM_CART case\n        // Your comment here\n        case userTypes.REMOVE_FROM_CART:\n            let newState = state.cart.filter((product) => {\n                return product._id !== action.payload._id;\n            });\n\n            return {\n                ...state,\n                cartOpen: newState.length > 0,\n                cart: newState,\n            };\n\n        case userTypes.CLEAR_CART:\n            return {\n                ...state,\n                cartOpen: false,\n                cart: [],\n            };\n\n        case userTypes.TOGGLE_CART:\n            return {\n                ...state,\n                cartOpen: !state.cartOpen,\n            };\n\n        case userTypes.UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.payload.categories],\n            };\n\n        case userTypes.UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.payload.currentCategory,\n            };\n\n        // TODO: Add a comment describing what the default case is for\n        // Your comment here\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,YAA3B;AAEA,MAAMC,aAAa,GAAG;EAClBC,QAAQ,EAAE,EADQ;EAElBC,QAAQ,EAAE,KAFQ;EAGlBC,IAAI,EAAE,EAHY;EAIlBC,UAAU,EAAE,EAJM;EAKlBC,eAAe,EAAE;AALC,CAAtB;;AASA,MAAMC,WAAW,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BP,aAA0B;EAAA,IAAXQ,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI;IACA;IACA,KAAKV,SAAS,CAACW,eAAf;MACI,OAAO,EACH,GAAGH,KADA;QAEHN,QAAQ,EAAE,CAAC,GAAGO,MAAM,CAACG,OAAP,CAAeV,QAAnB;MAFP,CAAP;;IAKJ,KAAKF,SAAS,CAACa,WAAf;MACI,OAAO,EACH,GAAGL,KADA;QAEHL,QAAQ,EAAE,IAFP;QAGHC,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACG,OAAvB;MAHH,CAAP;;IAMJ,KAAKZ,SAAS,CAACc,oBAAf;MACI,OAAO,EACH,GAAGN,KADA;QAEHJ,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgB,GAAGK,MAAM,CAACG,OAAP,CAAeV,QAAlC;MAFH,CAAP;IAKJ;IACA;;IACA,KAAKF,SAAS,CAACe,oBAAf;MACI,MAAM;QAAEC,GAAF;QAAOC;MAAP,IAA4BR,MAAM,CAACG,OAAzC;MAEA,OAAO,EACH,GAAGJ,KADA;QAEHL,QAAQ,EAAE,IAFP;QAGHC,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWc,GAAX,CAAgBC,OAAD,IAAa;UAC9B,IAAIH,GAAG,KAAKG,OAAO,CAACH,GAApB,EAAyB;YACrBG,OAAO,CAACF,gBAAR,GAA2BA,gBAA3B;UACH;;UACD,OAAOE,OAAP;QACH,CALK;MAHH,CAAP;IAWJ;IACA;;IACA,KAAKnB,SAAS,CAACoB,gBAAf;MACI,IAAIC,QAAQ,GAAGb,KAAK,CAACJ,IAAN,CAAWkB,MAAX,CAAmBH,OAAD,IAAa;QAC1C,OAAOA,OAAO,CAACH,GAAR,KAAgBP,MAAM,CAACG,OAAP,CAAeI,GAAtC;MACH,CAFc,CAAf;MAIA,OAAO,EACH,GAAGR,KADA;QAEHL,QAAQ,EAAEkB,QAAQ,CAACE,MAAT,GAAkB,CAFzB;QAGHnB,IAAI,EAAEiB;MAHH,CAAP;;IAMJ,KAAKrB,SAAS,CAACwB,UAAf;MACI,OAAO,EACH,GAAGhB,KADA;QAEHL,QAAQ,EAAE,KAFP;QAGHC,IAAI,EAAE;MAHH,CAAP;;IAMJ,KAAKJ,SAAS,CAACyB,WAAf;MACI,OAAO,EACH,GAAGjB,KADA;QAEHL,QAAQ,EAAE,CAACK,KAAK,CAACL;MAFd,CAAP;;IAKJ,KAAKH,SAAS,CAAC0B,iBAAf;MACI,OAAO,EACH,GAAGlB,KADA;QAEHH,UAAU,EAAE,CAAC,GAAGI,MAAM,CAACG,OAAP,CAAeP,UAAnB;MAFT,CAAP;;IAKJ,KAAKL,SAAS,CAAC2B,uBAAf;MACI,OAAO,EACH,GAAGnB,KADA;QAEHF,eAAe,EAAEG,MAAM,CAACG,OAAP,CAAeN;MAF7B,CAAP;IAKJ;IACA;;IACA;MACI,OAAOE,KAAP;EA/ER;AAiFH,CAlFD;;AAoFA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}